<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- parent -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.12</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <!-- project info -->
  <groupId>com.zlargon</groupId>
  <artifactId>springdemo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>springdemo</name>
  <description>Demo project for Spring Boot</description>

  <!-- properties -->
  <properties>
    <java.version>11</java.version>
    <testcontainers.version>1.16.2</testcontainers.version>
  </properties>

  <!-- dependencies -->
  <dependencies>
    <!-- spring-boot-starter-actuator -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- spring-boot-starter-jooq -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jooq</artifactId>
    </dependency>

    <!-- spring-boot-starter-web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- spring-boot-devtools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- spring-boot-starter-test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- https://springdoc.org/ -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>1.5.13</version>
    </dependency>

    <!-- console-launcher: https://mvnrepository.com/artifact/org.junit.platform/junit-platform-console-standalone -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-console-standalone</artifactId>
      <version>1.7.1</version>
      <scope>test</scope>
    </dependency>

    <!-- flyway -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- test containers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- plugin -->
  <build>
    <plugins>
      <!-- spring-boot-maven-plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- flyway-maven-plugin -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>

        <!-- Note that we're executing the Flyway plugin in the "generate-sources" phase -->
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>

        <!-- Note that we need to prefix the db/migration path with filesystem:
          to prevent Flyway from looking for our migration scripts only on the classpath -->
        <configuration>
          <url>jdbc:postgresql://${env.DB_URL}</url>
          <user>${env.DB_USERNAME}</user>
          <password>${env.DB_PASSWORD}</password>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
        </configuration>
      </plugin>

      <!-- jooq-codegen-maven -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>

        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>

            <configuration>
              <!-- jdbc config -->
              <jdbc>
                <url>jdbc:postgresql://${env.DB_URL}</url>
                <user>${env.DB_USERNAME}</user>
                <password>${env.DB_PASSWORD}</password>
              </jdbc>

              <generator>
                <!-- database options -->
                <database>
                  <name>org.jooq.meta.postgres.PostgresDatabase</name>
                  <includes>.*</includes>
                  <excludes>flyway_schema_history</excludes>
                  <inputSchema>spring_demo</inputSchema>
                </database>

                <!-- generate options -->
                <generate>
                  <deprecated>true</deprecated>
                  <instanceFields>true</instanceFields>
                  <pojos>false</pojos>
                </generate>

                <!-- target -->
                <target>
                  <packageName>com.zlargon.springdemo.jooq</packageName>
                  <directory>src/main/java</directory>
                </target>
              </generator>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- jacoco-maven-plugin -->
      <!-- https://www.baeldung.com/jacoco -->
      <!-- https://github.com/dailycodebuffer/Spring-MVC-Tutorials/blob/master/JaCoCo-Demo/pom.xml -->
      <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
              <goal>check</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/jooq/**</exclude>
              </excludes>
              <rules>
                <rule>
                  <element>PACKAGE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- prettier-maven-plugin -->
      <plugin>
        <groupId>com.hubspot.maven.plugins</groupId>
        <artifactId>prettier-maven-plugin</artifactId>
        <version>0.16</version>
        <configuration>
          <prettierJavaVersion>1.5.0</prettierJavaVersion>
          <printWidth>120</printWidth>
          <tabWidth>2</tabWidth>
          <useTabs>false</useTabs>
          <ignoreConfigFile>true</ignoreConfigFile>
          <ignoreEditorConfig>true</ignoreEditorConfig>
          <!-- Use <inputGlobs> to override the default input patterns -->
          <inputGlobs>
            <!-- These are the default patterns, you can omit <inputGlobs> entirely unless you want to override them -->
            <inputGlob>src/main/java/**/*.java</inputGlob>
            <inputGlob>src/test/java/**/*.java</inputGlob>
          </inputGlobs>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>write</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- githook-maven-plugin -->
      <plugin>
        <groupId>io.github.phillipuniverse</groupId>
        <artifactId>githook-maven-plugin</artifactId>
        <version>1.0.5</version>
        <executions>
          <execution>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <hooks>
                <pre-commit>exec mvn prettier:check</pre-commit>
                <pre-push>exec mvn test</pre-push>
              </hooks>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- maven-clean-plugin -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/java/com/zlargon/springdemo/jooq</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
