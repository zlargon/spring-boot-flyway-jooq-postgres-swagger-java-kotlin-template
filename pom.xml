<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- parent -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.6</version>
    <relativePath />
    <!-- lookup parent from repository -->
  </parent>

  <!-- project info -->
  <groupId>com.zlargon</groupId>
  <artifactId>springdemo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>springdemo</name>
  <description>Demo project for Spring Boot</description>

  <!-- properties -->
  <properties>
    <java.version>11</java.version>
    <kotlin.version>1.6.21</kotlin.version>
    <testcontainers.version>1.17.6</testcontainers.version>
  </properties>

  <!-- dependencies -->
  <dependencies>
    <!-- spring-boot-starter-actuator -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- spring-boot-starter-jooq -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jooq</artifactId>
    </dependency>

    <!-- spring-boot-starter-web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- jackson for kotlin -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>

    <!-- flyway -->
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <!-- kotlin -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>

    <!-- spring-boot-devtools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- spring-boot-starter-test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- https://springdoc.org/ -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>1.6.13</version>
    </dependency>

    <!-- console-launcher: https://mvnrepository.com/artifact/org.junit.platform/junit-platform-console-standalone -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-console-standalone</artifactId>
      <version>1.9.1</version>
      <scope>test</scope>
    </dependency>

    <!-- test containers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- Explicitly use java as the source instead of kotlin -->
    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>

    <!-- plugin -->
    <plugins>
      <!-- spring-boot-maven-plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- kotlin-maven-plugin -->
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <configuration>
          <args>
            <arg>-Xjsr305=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>spring</plugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>

        <!-- https://www.baeldung.com/kotlin/maven-java-project -->
        <!-- Handle both compile and test-compile goals, telling it where to find our sources.
          By convention, we keep Java and Kotlin sources in different directories, though we
          could put them all in the same -->
        <executions>
          <execution>
            <id>kotlin-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>kotlin-test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/test/java</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- maven-compiler-plugin -->
      <!-- https://www.baeldung.com/kotlin/maven-java-project -->
      <!-- Maven plugins executions happen according to the declaration order. So we should place
        maven-compiler-plugin after kotlin-maven-plugin. But the former has two specific executions
        that are executed before everything else during the phases: default-compile and default-testCompile.
        We need to disable them and enable java-compile and java-test-compile instead to ensure that
        kotlin-maven-plugin execution will happen before maven-compiler-plugin: -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- exec-maven-plugin -->
      <!-- http://www.mojohaus.org/exec-maven-plugin/usage.html -->
      <plugin>
        <artifactId>exec-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>install-git-hook</id>
            <phase>initialize</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/ghooks/install</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- build-helper-maven-plugin -->
      <!-- https://stackoverflow.com/a/55795344/2802074 -->
      <!-- When we're using java and kotlin source, we need to use this build-helper to
           generate the coverage for the kotlin files and it works for kotlin tests as well -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <!--
            Add "src/main/kotlin" as additional source directory,
            so that kotlin-maven-plugin and jacoco-maven-plugin will look for files in it
            -->
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/src/main/kotlin</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- jacoco-maven-plugin -->
      <!-- https://www.baeldung.com/jacoco -->
      <!-- https://github.com/dailycodebuffer/Spring-MVC-Tutorials/blob/master/JaCoCo-Demo/pom.xml -->
      <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
              <goal>check</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/jooq/**</exclude>
              </excludes>
              <rules>
                <rule>
                  <element>PACKAGE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- prettier-maven-plugin -->
      <plugin>
        <groupId>com.hubspot.maven.plugins</groupId>
        <artifactId>prettier-maven-plugin</artifactId>
        <version>0.18</version>
        <configuration>
          <prettierJavaVersion>1.6.2</prettierJavaVersion>
          <printWidth>120</printWidth>
          <tabWidth>2</tabWidth>
          <useTabs>false</useTabs>
          <ignoreConfigFile>true</ignoreConfigFile>
          <ignoreEditorConfig>true</ignoreEditorConfig>
          <!-- Use <inputGlobs> to override the default input patterns -->
          <inputGlobs>
            <!-- These are the default patterns, you can omit <inputGlobs> entirely unless you want to override them -->
            <inputGlob>src/main/java/**/*.java</inputGlob>
            <inputGlob>src/test/java/**/*.java</inputGlob>
          </inputGlobs>
        </configuration>
      </plugin>

      <!-- ktlint-maven-plugin -->
      <plugin>
        <groupId>com.github.gantsign.maven</groupId>
        <artifactId>ktlint-maven-plugin</artifactId>
        <version>1.15.2</version>

        <configuration>
          <sourceRoots>${project.basedir}/src/main/kotlin</sourceRoots>
          <testSourceRoots>${project.basedir}/src/test/kotlin</testSourceRoots>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
